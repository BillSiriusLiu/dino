max_batch_size: 100 
platform: "ensemble" # 专用来整合整个pipeline

#input to the model 
input [
    {
        name: "img"   # 输入query, 一个二维数组[["query"], ["query"]]
        data_type: TYPE_FP32 # 字符串类型
        dims: [ -1, 3, -1, -1 ]
    },
    {
        name: "text"
        data_type: TYPE_STRING
        dims[ -1 ]
    }
]

#output of the model 
output [
    {
        name: "logits" 
        data_type: TYPE_FP32
        dims: [ -1, 900, 256 ]
    },
    {
        name: "boxes" 
        data_type: TYPE_FP32
        dims: [ -1, 4 ]
    }
]

#Type of scheduler to be used
ensemble_scheduling {
    step [
        {
            model_name: "preprocess"
            model_version: -1
            input_map [
                {
                    key: "img"
                    value: "_img" # 这个对应ensemble的输入
                },
                {
                    key: "text"
                    value: "_text"
                }
            ]
            output_map [
                {
                    key: "img"
                    value: "_img" # 这个对应ensemble的输入
                },
                {
                    key: "input_ids"
                    value: "_intput_ids"
                },
                {
                    key: "attention_mask"
                    value: "_attention_mask"
                },
                {
                    key: "position_ids"
                    value: "_position_ids"
                },
                {
                    key: "token_type_ids"
                    value: "_token_type_ids"
                },
                {
                    key: "text_token_mask"
                    value: "_text_token_mask"
                }
            ]
        },
        {
            model_name: "GroundingDINO"
            model_version: -1
            input_map [
                {
                    key: "img"
                    value: "_img" # 这个对应ensemble的输入
                },
                {
                    key: "input_ids"
                    value: "_intput_ids"
                },
                {
                    key: "attention_mask"
                    value: "_attention_mask"
                },
                {
                    key: "position_ids"
                    value: "_position_ids"
                },
                {
                    key: "token_type_ids"
                    value: "_token_type_ids"
                },
                {
                    key: "text_token_mask"
                    value: "_text_token_mask"
                }
            ]
            output_map [
                {
                    key: "logits"
                    value: "_logits"
                },
                {
                    key: "boxes"
                    value: "_boxes"
                }
            ]
        }
    ]
}